@model DepremAnalizSistemi.Models.Kullanicilar


@if (Model != null)
{
    using (Ajax.BeginForm("ChangeUserSettings", "Kullanicilar", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "MyAccountSettings", OnSuccess = "onChangeSettingsSuccess" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 style="color:white">Bilgileri Düzenle</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <span class="text-warning">@Html.DisplayFor(model => model.ErrorMessage)</span>
    <div class="form-group">
        @Html.LabelFor(model => model.Ad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ad, new { htmlAttributes = new { @class = "form-control", @readonly = "true", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Ad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Soyad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Soyad, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.Soyad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TcNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TcNo, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.TcNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }


}
@if (Model != null)
{
    using (Ajax.BeginForm("ChangePassword", "Kullanicilar", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "MyAccountSettings", OnSuccess = "onChangePasswordSuccess" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 style="color:white">Şifre Değiştir</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <span class="text-warning">@Html.DisplayFor(model => model.PasswordErrorMessage)</span>
    <div class="form-group">
        @Html.LabelFor(model => model.Sifre, htmlAttributes: new { @class = "control-label col-md-2", value = "" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sifre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sifre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YeniSifre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YeniSifre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.YeniSifre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YeniSifreOnay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YeniSifreOnay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.YeniSifreOnay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }


}
